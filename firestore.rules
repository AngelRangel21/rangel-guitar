
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Devuelve 'true' si el usuario actual ha iniciado sesión Y es administrador.
    // Comprueba primero que el documento del usuario exista para evitar errores.
    function isAdmin() {
      return request.auth != null 
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Devuelve 'true' si el usuario ha iniciado sesión.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Devuelve 'true' si la actualización SOLO modifica los campos especificados.
    function isOnlyUpdating(fields) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(fields);
    }

    // Reglas para la colección 'songs'
    match /songs/{songId} {
      // Cualquiera puede leer la lista de canciones o una canción específica.
      allow get, list: if true;

      // Solo los administradores pueden crear o eliminar canciones.
      allow create, delete: if isAdmin();
      
      // Lógica de actualización:
      allow update: if 
        // Los administradores pueden actualizar cualquier campo.
        isAdmin() ||
        // Cualquier usuario (incluso anónimo) puede actualizar SOLO el contador de visitas.
        isOnlyUpdating(['visitCount']) ||
        // Un usuario que ha iniciado sesión puede actualizar SOLO el contador de "me gusta".
        (isSignedIn() && isOnlyUpdating(['likeCount']));
    }

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Un usuario puede crear su propio documento (al registrarse).
      // Un usuario puede leer y actualizar su propio documento.
      allow create, get, update: if request.auth.uid == userId;
      // Un administrador puede leer los datos de cualquier usuario.
      allow get: if isAdmin();
    }
    
    // Reglas para la colección 'song-requests'
    match /song-requests/{requestId} {
      // Un usuario que ha iniciado sesión puede crear una solicitud.
      allow create: if isSignedIn();
      // Solo los administradores pueden leer la lista de solicitudes o eliminarlas.
      allow list, get, delete: if isAdmin();
    }
  }
}
