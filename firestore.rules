
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Checks if the requesting user is an admin.
    // It first verifies the user is signed in, their user document exists,
    // and the `isAdmin` field is true. This is safer than a direct get.
    function isAdmin() {
      return request.auth != null 
             && exists(/databases/$(database)/documents/users/$(request.auth.uid))
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Allow public read access to songs.
    // Only admins can create, update, or delete songs.
    match /songs/{songId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users can be created upon signup.
    // They can read their own data. Admins can read any user's data.
    // Users can only update their own data.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    // Only admins can manage song requests.
    match /song-requests/{requestId} {
      allow read, write: if isAdmin();
    }
  }
}
