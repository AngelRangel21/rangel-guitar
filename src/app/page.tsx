import { HomeClient } from "@/components/home-client";
import { getSongs } from "@/services/songs-service";

/**
 * Componente de p치gina principal del servidor.
 * Esta p치gina se renderiza en el servidor y es responsable de obtener los datos iniciales de las canciones.
 * @returns {Promise<JSX.Element>} El componente HomeClient con los datos iniciales de las canciones.
 */
export default async function Home() {
  // Inicializa un array para almacenar todas las canciones.
  let allSongs = [];

  try {
    // Siendo un Server Component, obtiene la versi칩n m치s actualizada
    // del array `songs` desde el servidor.
    allSongs = await getSongs();
    
  } catch (error: any) {
    // Muestra un error detallado en la consola del servidor si falla la carga de canciones.
    // Esto es 칰til para diagnosticar problemas con la base de datos de Firestore.
    console.error("==============================================================");
    console.error("游댮 ERROR AL OBTENER CANCIONES DE FIRESTORE 游댮");
    console.error("Esto usualmente significa que la base de datos de Firestore no ha sido creada o est치 en el modo incorrecto.");
    console.error("1. Ve a la consola de tu proyecto de Firebase.");
    console.error("2. Haz clic en 'Firestore Database' en el men칰 de 'Crear'.");
    console.error("3. Aseg칰rate de haber creado una base de datos en 'Modo Nativo'.");
    console.error("Error Original:", error.message);
    console.error("==============================================================");
    // Se contin칰a con una lista vac칤a para evitar que la p치gina se rompa.
    allSongs = []; // Si falla, se devuelve una lista vac칤a.
  }

  // Pasa los datos como una prop al componente de cliente.
  // El cliente recibir치 esta instant치nea exacta de los datos, evitando
  // cualquier desajuste de hidrataci칩n.
  return <HomeClient initialSongs={allSongs} />;
}
